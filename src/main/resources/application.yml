spring:
  application:
    name: humandelivery

  config:
    import: optional:file:.env[.properties]

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  kafka:
    bootstrap-servers: "${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092,localhost:9093,localhost:9094}"  # Kafka 브로커들
    consumer:
      group-id: call-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  datasource:
    url: "${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/humandelivery}"
    username: "${SPRING_DATASOURCE_USERNAME:root}"
    password: "${SPRING_DATASOURCE_PASSWORD:root}"

    hikari:
      maximum-pool-size: 400
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 60000

  data:
    redis:
      host: "${SPRING_DATA_REDIS_HOST:localhost}"
      port: "${SPRING_DATA_REDIS_PORT:6379}"

  rabbitmq:
    host: "${RABBITMQ_HOST:localhost}"
    port: "${RABBITMQ_PORT:5672}"
    username: "${RABBITMQ_USERNAME:guest}"
    password: "${RABBITMQ_PASSWORD:guest}"

  web:
    socket:
      message-broker:
        enabled: true

jwt:
  secret:
    access: "sadpofjaosdjfoapsjdfjaksopdjfpjaskopdjfopasjdpofjapsodfjapsodjfpaoksdjf"
    accessTokenValidTime: "3600000"

logging:
  level:
    org:
      springframework:
        web:
          socket: DEBUG
        messaging: DEBUG
      apache:
        kafka: FATAL
      kafka:
        clients: FATAL
      hibernate:
        SQL: debug
        orm:
          jdbc:
            bind: trace
      org:
        springframework:
          web:
            socket: DEBUG
          messaging: DEBUG
          cache: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"

server:
  tomcat:
    max-connections: 500
    accept-count: 200
    threads:
      max: 300
      min-spare: 50

kakao:
  rest:
    api:
      key: ${KAKAO_REST_API_KEY}
# docker-compose -f docker-compose.test.yml up -d
version: "3.8"

services:
  # ZooKeeper 3노드
  zookeeper1:
    image: bitnami/zookeeper:3.8
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=zookeeper1:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
    volumes:
      - zookeeper1_data:/bitnami/zookeeper

  zookeeper2:
    image: bitnami/zookeeper:3.8
    hostname: zookeeper2
    container_name: zookeeper2
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=2
      - ZOO_SERVERS=zookeeper1:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
    volumes:
      - zookeeper2_data:/bitnami/zookeeper

  zookeeper3:
    image: bitnami/zookeeper:3.8
    hostname: zookeeper3
    container_name: zookeeper3
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=3
      - ZOO_SERVERS=zookeeper1:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
    volumes:
      - zookeeper3_data:/bitnami/zookeeper

  # Kafka 3노드
  kafka1:
    image: bitnami/kafka:3.8.1
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:19092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_LISTENERS=INTERNAL://kafka1:9092,EXTERNAL://0.0.0.0:19092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka1:9092,EXTERNAL://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    volumes:
      - kafka1_data:/bitnami/kafka

  kafka2:
    image: bitnami/kafka:3.8.1
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:19093"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_LISTENERS=INTERNAL://kafka2:9093,EXTERNAL://0.0.0.0:19093
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka2:9093,EXTERNAL://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    volumes:
      - kafka2_data:/bitnami/kafka

  kafka3:
    image: bitnami/kafka:3.8.1
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:19094"
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_LISTENERS=INTERNAL://kafka3:9094,EXTERNAL://0.0.0.0:19094
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka3:9094,EXTERNAL://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    volumes:
      - kafka3_data:/bitnami/kafka

  # Redis
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: humandelivery
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  zookeeper1_data:
  zookeeper2_data:
  zookeeper3_data:
  kafka1_data:
  kafka2_data:
  kafka3_data:
  redis_data:
  mysql_data:
